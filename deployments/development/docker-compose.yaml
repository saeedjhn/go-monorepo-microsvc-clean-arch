include:
  - ../user/development/docker-compose.yaml

services:
  ######################################### COMMON SERVICES #########################################

  ######################## MYSQL ########################

  mysqldb:
    container_name: go-monorepo-microsvc-clean-arch_development_mysqldb
    image: mysql:latest
    env_file:
      - .env
    ports:
      - "${MYSQL_PORT}:${MYSQL_PORT}"
    volumes:
      - mysql:/var/lib/mysql
    restart: always
    command: [ 'mysqld', '--character-set-server=utf8mb4', '--collation-server=utf8mb4_unicode_ci' ]
    networks:
      - go-monorepo-microsvc-clean-arch_network

  ####################### POSTGRES #######################

  #  psqldb:
  #    container_name: go-monorepo-microsvc-clean-arch_psqldb
  #    image: postgres:latest
  #    env_file:
  #      - .env
  #    ports:
  #      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
  #    volumes:
  #      - psql:/var/lib/psql/data
  #    restart: always
  #    networks:
  #      - go-monorepo-microsvc-clean-arch_network

  ####################### MONOGO #######################

  #  mongodb:
  #    container_name: go-monorepo-microsvc-clean-arch_mongodb
  #    image: mongo:latest
  #    environment:
  #      MONGO_INITDB_ROOT_USERNAME: $
  #      MONGO_INITDB_ROOT_PASSWORD: $
  #    ports:
  #      - "27017:27017"
  #      - "$:$"
  #    volumes:
  #      - mongodb-data:/data/db
  #    restart: unless-stopped
  #    networks:
  #      - go-monorepo-microsvc-clean-arch_network

  ####################### PGADMIN #######################

  #  pgadmin:
  #    image: dpage/pgadmin4
  #    environment:
  #      PGADMIN_DEFAULT_EMAIL: ghafbu@gmail.com
  #      PGADMIN_DEFAULT_PASSWORD: 123456
  #    volumes:
  #      - pgadmin:/var/lib/pgadmin/data
  #    ports:
  #      - "5002:80"
  #    networks:
  #      - go-monorepo-microsvc-clean-arch_network
  #    restart: unless-stopped
  #    depends_on:
  #      - psqldb

  ######################## REDIS ########################
  redis:
    container_name: go-monorepo-microsvc-clean-arch_development_redis
    image: redis:latest
    env_file:
      - .env
    command: redis-server --loglevel warning --protected-mode no --save "" --appendonly no
    #    command: [ "redis-server", "/etc/redis/redis.conf" ]
    volumes:
      - redis:/var/lib/redis/data
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    networks:
      - go-monorepo-microsvc-clean-arch_network


  ######################################### GLOBAL SERVICES #########################################

  ######################## API-GATEWAY(Nginx) ########################

  nginx:
    image: nginx:alpine
    build:
      context: .
      # The .env file in the project root, and the env_file: field in the Compose file are two different concepts.
      # The .env is for settings a default environment for Compose. Values set in this file can be used within the Compose file.
      # The env_file: field is for setting the default environment for a container. Values set in this can be used in the container, but not in the Compose file.
    env_file:
      - .env
    ports:
      - "${NGINX_HTTP_PORT_FOR_LISTEN}:${NGINX_HTTP_PORT_FOR_LISTEN}"
      - "${NGINX_USER_SERVICE_GRPC_PORT}:${NGINX_USER_SERVICE_GRPC_PORT}"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf.template
    command: /bin/sh -c "envsubst < /etc/nginx/nginx.conf.template > /etc/nginx/nginx.conf && nginx -g 'daemon off;'"
    #    ports:
    #      - "80:80"
    #    volumes:
    #      - ./nginx.conf:/etc/nginx/nginx.conf
    networks:
      - go-monorepo-microsvc-clean-arch_network
    depends_on:
      - user-service


volumes:
  mysql:
  #  psql:
  #  mongodb-data:
  #  pgadmin:
  redis:
  logs:

networks:
  go-monorepo-microsvc-clean-arch_network:
    driver: bridge
